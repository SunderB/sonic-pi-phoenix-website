# This is a data file that contains information describing the text that is
# displayed on pages in the Lang section of Sonic Pi's help panel.

## Function name
## ====================
# A unique identifier for this function.
["degree"]

## Function summary
## ====================
# A short phrase describing this Sonic Pi function.
summary = "Convert a degree into a note"

## Function description
## ====================
# The detailed description of this function.
doc = '''
For a given scale and tonic it takes a symbol/string/number and resolves it to a midi note. The degree can be either a decimal number or a roman numeral (if it's a string or symbol), and may optionally be prefixed an augmentation (`a`/`d` for an augmented/diminished interval, `aa`/`dd` for double augmented/diminished or `p` for a perfect (unchanged) interval).
'''

## Function args
## ====================
# Args are the required parameters for the function. Each arg has two documented
# properties:
# - the arg's name
# - the arg's type (number, integer, symbol, ...).
# Example:
# (Repeat the following for every arg):
# [[chord.args]]
# name = "tonic"
# type = "symbol"

[["degree".args]]
name = "degree"
type = "symbol_or_number"

[["degree".args]]
name = "tonic"
type = "symbol"

[["degree".args]]
name = "scale"
type = "symbol"

## Function introduction
## ====================
# The label describing the version of Sonic Pi in which this function first appeared.
["degree".introduced]
label = "Introduced in v2.1"

## Function options
## ====================
# The options are the optional parameters of this function.
# Each option has two documented properties:
# - the option's name
# - the option's description doc.
# Example:
# [chord.options]
# label = "Options"

# Now repeat the following for every option:
# [[chord.options.list]]
# name = "invert:"
# doc = '''
# Apply the specified num inversions to chord. See the fn `chord_invert`.
# '''

## Function examples
## ====================
# Each function may have one or more examples. If it has any, they are listed
# under an overall 'Example' or 'Examples' label (heading), and each example has
# a numbered sub-heading.
# Example:
# [chord.examples]
# label = "Example"
# label_plural = "Examples"

# Now repeat the following for every example:
# [[chord.examples.list]]
# label = "Example 1"
# example = '''
# puts (chord :e, :minor) # returns a ring of midi notes - (ring 64, 67, 71)
# '''
["degree".examples]
label = "Example"
label_plural = "Examples"

[["degree".examples.list]]
label = "Example 1"
example = '''

play degree(:iii, :D3, :major) # major third up from :D3
play degree(3, :C3, :minor) # minor third up from :C3
play degree('d5', :B3, :major) # diminished fifth up from :B3

'''

[["degree".examples.list]]
label = "Example 2"
example = '''

chrd = []
[:i, :iii, :v, :dvii, :dix, :Axi, :xiii].each do |d|  # for each degree in the chord
  chrd.append (degree d, :Fs, :major)  # add the corresponding note
end
play chrd  # play an F# 13+11-9 chord, using roman numeral symbols

'''

[["degree".examples.list]]
label = "Example 3"
example = '''

chrd = []
['1', '3', '5', 'd7', 'd9', 'A11', '13'].each do |d|
  chrd.append (degree d, :Fs, :major)
end
play chrd  # the same chord as above, but using decimal number strings

'''

