# This is a data file that contains information describing the text that is
# displayed on pages in the Lang section of Sonic Pi's help panel.

## Function name
## ====================
# A unique identifier for this function.
["midi_local_control_on"]

## Function summary
## ====================
# A short phrase describing this Sonic Pi function.
summary = "Enable local control on MIDI devices"

## Function description
## ====================
# The detailed description of this function.
doc = '''
Sends a MIDI local control on message to *all* connected devices on *all* channels. Use the `port:` and `channel:` opts to restrict which MIDI ports and channels are used.

All devices on a given channel will respond both to data received over MIDI and played data, etc. See `midi_local_control_off` to disable local control.

[MIDI 1.0 Specification - Channel Mode Messages - Local Control On](https://www.midi.org/specifications/item/table-1-summary-of-midi-message)

'''

## Function args
## ====================
# Args are the required parameters for the function. Each arg has two documented
# properties:
# - the arg's name
# - the arg's type (number, integer, symbol, ...).
# Example:
# (Repeat the following for every arg):
# [[chord.args]]
# name = "tonic"
# type = "symbol"

## Function introduction
## ====================
# The label describing the version of Sonic Pi in which this function first appeared.
["midi_local_control_on".introduced]
label = "Introduced in v3.0"

## Function options
## ====================
# The options are the optional parameters of this function.
# Each option has two documented properties:
# - the option's name
# - the option's description doc.
# Example:
# [chord.options]
# label = "Options"

# Now repeat the following for every option:
# [[chord.options.list]]
# name = "invert:"
# doc = '''
# Apply the specified num inversions to chord. See the fn `chord_invert`.
# '''

["midi_local_control_on".options]
label = "Options"

[["midi_local_control_on".options.list]]
name = "channel:"
doc = '''
Channel to send the local control on message to
'''

[["midi_local_control_on".options.list]]
name = "port:"
doc = '''
MIDI port to send to
'''

[["midi_local_control_on".options.list]]
name = "on:"
doc = '''
If specified and false/nil/0 will stop the midi local control on message from being sent out. (Ensures all opts are evaluated in this call to `midi_local_control_on` regardless of value).
'''

## Function examples
## ====================
# Each function may have one or more examples. If it has any, they are listed
# under an overall 'Example' or 'Examples' label (heading), and each example has
# a numbered sub-heading.
# Example:
# [chord.examples]
# label = "Example"
# label_plural = "Examples"

# Now repeat the following for every example:
# [[chord.examples.list]]
# label = "Example 1"
# example = '''
# puts (chord :e, :minor) # returns a ring of midi notes - (ring 64, 67, 71)
# '''
["midi_local_control_on".examples]
label = "Example"
label_plural = "Examples"

[["midi_local_control_on".examples.list]]
label = "Example 1"
example = '''
midi_local_control_on #=> Enable local control on MIDI devices on all channels (and ports)
'''

[["midi_local_control_on".examples.list]]
label = "Example 2"
example = '''
midi_local_control_on channel: 2 #=> Enable local control on MIDI devices on channel 2
'''

