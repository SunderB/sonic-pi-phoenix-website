# This is a data file that contains information describing the text that is
# displayed on pages in the Lang section of Sonic Pi's help panel.

## Function name
## ====================
# A unique identifier for this function.
["midi_raw"]

## Function summary
## ====================
# A short phrase describing this Sonic Pi function.
summary = "Send raw MIDI message"

## Function description
## ====================
# The detailed description of this function.
doc = '''
Sends the raw MIDI message to *all* connected MIDI devices. Gives you direct access to sending the individual bytes of a MIDI message. Typically this should be rarely used - prefer the other `midi_` fns where possible.

A raw MIDI message consists of multiple bytes as numbers in decimal notation (i.e. 176), hex (0xb0) or binary (0b10110000).

See https://www.midi.org/specifications/item/table-1-summary-of-midi-message for a summary of MIDI messages and their corresponding byte structures.

'''

## Function args
## ====================
# Args are the required parameters for the function. Each arg has two documented
# properties:
# - the arg's name
# - the arg's type (number, integer, symbol, ...).
# Example:
# (Repeat the following for every arg):
# [[chord.args]]
# name = "tonic"
# type = "symbol"

## Function introduction
## ====================
# The label describing the version of Sonic Pi in which this function first appeared.
["midi_raw".introduced]
label = "Introduced in v3.0"

## Function options
## ====================
# The options are the optional parameters of this function.
# Each option has two documented properties:
# - the option's name
# - the option's description doc.
# Example:
# [chord.options]
# label = "Options"

# Now repeat the following for every option:
# [[chord.options.list]]
# name = "invert:"
# doc = '''
# Apply the specified num inversions to chord. See the fn `chord_invert`.
# '''

["midi_raw".options]
label = "Options"

[["midi_raw".options.list]]
name = "port:"
doc = '''
Port(s) to send the raw MIDI message events to
'''

[["midi_raw".options.list]]
name = "on:"
doc = '''
If specified and false/nil/0 will stop the raw midi message from being sent out. (Ensures all opts are evaluated in this call to `midi_raw` regardless of value).
'''

## Function examples
## ====================
# Each function may have one or more examples. If it has any, they are listed
# under an overall 'Example' or 'Examples' label (heading), and each example has
# a numbered sub-heading.
# Example:
# [chord.examples]
# label = "Example"
# label_plural = "Examples"

# Now repeat the following for every example:
# [[chord.examples.list]]
# label = "Example 1"
# example = '''
# puts (chord :e, :minor) # returns a ring of midi notes - (ring 64, 67, 71)
# '''
["midi_raw".examples]
label = "Example"
label_plural = "Examples"

[["midi_raw".examples.list]]
label = "Example 1"
example = '''
midi_raw 176, 121, 0  #=> Sends the MIDI reset command
'''

[["midi_raw".examples.list]]
label = "Example 2"
example = '''
midi_raw 176.1, 120.5, 0.49  #=> Sends the MIDI reset command (values are rounded down, up and down respectively)
'''

[["midi_raw".examples.list]]
label = "Example 3"
example = '''
midi_raw 0xb0, 0x79, 0x0  #=> Sends the MIDI reset command
'''

[["midi_raw".examples.list]]
label = "Example 4"
example = '''
midi_raw 0b10110000, 0b01111001, 0b00000000  #=> Sends the MIDI reset command
'''

