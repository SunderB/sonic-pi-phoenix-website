# This is a data file that contains information describing the text that is
# displayed on pages in the Lang section of Sonic Pi's help panel.

## Function name
## ====================
# A unique identifier for this function.
["midi_note_on"]

## Function summary
## ====================
# A short phrase describing this Sonic Pi function.
summary = "Send MIDI note on message"

## Function description
## ====================
# The detailed description of this function.
doc = '''
Sends a MIDI Note On Event to *all* connected devices on *all* channels. Use the `port:` and `channel:` opts to indepently restrict which MIDI ports and channels are used.

Note and velocity values can be passed as a note symbol such as `:e3` or a MIDI number such as 52. Decimal values will be rounded down or up to the nearest whole number - so values between 3.5 and 4 will be rounded up to 4 and values between 3.49999... and 3 will be rounded down to 3. These values will also be clipped within the range 0->127 so all values lower than 0 will be increased to 0 and all values greater than 127 will be reduced to 127.

The `velocity` param may be omitted - in which case it will default to 127 unless you supply it as an opt via the keys `velocity:` or `vel_f:`.

You may also optionally pass the velocity value as a floating point value between 0 and 1 such as 0.2 or 0.785 (which will be linearly mapped to MIDI values between 0 and 127) using the vel_f: opt.

[MIDI 1.0 Specification - Channel Voice Messages - Note on event](https://www.midi.org/specifications/item/table-1-summary-of-midi-message)

'''

## Function args
## ====================
# Args are the required parameters for the function. Each arg has two documented
# properties:
# - the arg's name
# - the arg's type (number, integer, symbol, ...).
# Example:
# (Repeat the following for every arg):
# [[chord.args]]
# name = "tonic"
# type = "symbol"

[["midi_note_on".args]]
name = "note"
type = "midi"

[["midi_note_on".args]]
name = "velocity"
type = "midi"

## Function introduction
## ====================
# The label describing the version of Sonic Pi in which this function first appeared.
["midi_note_on".introduced]
label = "Introduced in v3.0"

## Function options
## ====================
# The options are the optional parameters of this function.
# Each option has two documented properties:
# - the option's name
# - the option's description doc.
# Example:
# [chord.options]
# label = "Options"

# Now repeat the following for every option:
# [[chord.options.list]]
# name = "invert:"
# doc = '''
# Apply the specified num inversions to chord. See the fn `chord_invert`.
# '''

["midi_note_on".options]
label = "Options"

[["midi_note_on".options.list]]
name = "channel:"
doc = '''
MIDI channel(s) to send event on
'''

[["midi_note_on".options.list]]
name = "port:"
doc = '''
MIDI port(s) to send to
'''

[["midi_note_on".options.list]]
name = "velocity:"
doc = '''
Note velocity as a MIDI number.
'''

[["midi_note_on".options.list]]
name = "vel_f:"
doc = '''
Velocity as a value between 0 and 1 (will be converted to a MIDI velocity between 0 and 127)
'''

[["midi_note_on".options.list]]
name = "on:"
doc = '''
If specified and false/nil/0 will stop the midi note on message from being sent out. (Ensures all opts are evaluated in this call to `midi_note_on` regardless of value).
'''

## Function examples
## ====================
# Each function may have one or more examples. If it has any, they are listed
# under an overall 'Example' or 'Examples' label (heading), and each example has
# a numbered sub-heading.
# Example:
# [chord.examples]
# label = "Example"
# label_plural = "Examples"

# Now repeat the following for every example:
# [[chord.examples.list]]
# label = "Example 1"
# example = '''
# puts (chord :e, :minor) # returns a ring of midi notes - (ring 64, 67, 71)
# '''
["midi_note_on".examples]
label = "Example"
label_plural = "Examples"

[["midi_note_on".examples.list]]
label = "Example 1"
example = '''
midi_note_on :e3  #=> Sends MIDI note on for note :e3 with the default velocity of 12 to all ports and channels
'''

[["midi_note_on".examples.list]]
label = "Example 2"
example = '''
midi_note_on :e3, 12  #=> Sends MIDI note on for note :e3 with velocity 12 to all channels
'''

[["midi_note_on".examples.list]]
label = "Example 3"
example = '''
midi_note_on :e3, 12, channel: 3  #=> Sends MIDI note on for note :e3 with velocity 12 on channel 3
'''

[["midi_note_on".examples.list]]
label = "Example 4"
example = '''
midi_note_on :e3, velocity: 100 #=> Sends MIDI note on for note :e3 with velocity 100
'''

[["midi_note_on".examples.list]]
label = "Example 5"
example = '''
midi_note_on :e3, vel_f: 0.8 #=> Scales velocity 0.8 to MIDI value 102 and sends MIDI note on for note :e3 with velocity 102
'''

[["midi_note_on".examples.list]]
label = "Example 6"
example = '''
midi_note_on 60.3, 50.5 #=> Rounds params up or down to the nearest whole number and sends MIDI note on for note 60 with velocity 51
'''

[["midi_note_on".examples.list]]
label = "Example 7"
example = '''
midi_note_on :e3, channel: [1, 3, 5] #=> Send MIDI note on for note :e3 to channels 1, 3, 5 on all connected ports
'''

[["midi_note_on".examples.list]]
label = "Example 8"
example = '''
midi_note_on :e3, port: ["foo", "bar"] #=> Send MIDI note on for note :e3 to all channels on ports named "foo" and "bar"
'''

[["midi_note_on".examples.list]]
label = "Example 9"
example = '''
midi_note_on :e3, channel: 1, port: "foo" #=> Send MIDI note on for note :e3 only on channel 1 on port "foo"
'''

