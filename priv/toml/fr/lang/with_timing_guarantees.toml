# This is a data file that contains information describing the text that is
# displayed on pages in the Lang section of Sonic Pi's help panel.

## Function name
## ====================
# A unique identifier for this function.
["with_timing_guarantees"]

## Function summary
## ====================
# A short phrase describing this Sonic Pi function.
summary = "Block-scoped inhibition of synth triggers if too late"

## Function description
## ====================
# The detailed description of this function.
doc = '''
For the given block, if set to true, synths will not trigger if it is too late. If false, some synth triggers may be late. After the block has completed, the previous value is restored. 
'''

## Function args
## ====================
# Args are the required parameters for the function. Each arg has two documented
# properties:
# - the arg's name
# - the arg's type (number, integer, symbol, ...).
# Example:
# (Repeat the following for every arg):
# [[chord.args]]
# name = "tonic"
# type = "symbol"

[["with_timing_guarantees".args]]
name = "bool"
type = "true_or_false"

## Function introduction
## ====================
# The label describing the version of Sonic Pi in which this function first appeared.
["with_timing_guarantees".introduced]
label = "Introduced in v2.10"

## Function options
## ====================
# The options are the optional parameters of this function.
# Each option has two documented properties:
# - the option's name
# - the option's description doc.
# Example:
# [chord.options]
# label = "Options"

# Now repeat the following for every option:
# [[chord.options.list]]
# name = "invert:"
# doc = '''
# Apply the specified num inversions to chord. See the fn `chord_invert`.
# '''

## Function examples
## ====================
# Each function may have one or more examples. If it has any, they are listed
# under an overall 'Example' or 'Examples' label (heading), and each example has
# a numbered sub-heading.
# Example:
# [chord.examples]
# label = "Example"
# label_plural = "Examples"

# Now repeat the following for every example:
# [[chord.examples.list]]
# label = "Example 1"
# example = '''
# puts (chord :e, :minor) # returns a ring of midi notes - (ring 64, 67, 71)
# '''
["with_timing_guarantees".examples]
label = "Example"
label_plural = "Examples"

[["with_timing_guarantees".examples.list]]
label = "Example 1"
example = '''

with_timing_guarantees true do
  sample :loop_amen  #=> if time is behind by any margin, this will not trigger
end
'''

[["with_timing_guarantees".examples.list]]
label = "Example 2"
example = '''

with_timing_guarantees false do
  sample :loop_amen  #=> unless time is too far behind, this will trigger even when late.
end
'''

