# This is a data file that contains information describing the text that is
# displayed on pages in the Lang section of Sonic Pi's help panel.

## Function name
## ====================
# A unique identifier for this function.
["load_samples"]

## Function summary
## ====================
# A short phrase describing this Sonic Pi function.
summary = "Pre-load all matching samples"

## Function description
## ====================
# The detailed description of this function.
doc = '''
Given a directory containing multiple `.wav`, `.wave`, `.aif`, `.aiff`, `.ogg`, `.oga` or `.flac` files, pre-loads all the samples into memory.

 You may also specify the same set of source and filter pre-args available to `sample` itself. `load_sample` will load all matching samples (not just the sample `sample` would play given the same opts) - see `sample`'s docs for more information.
'''

## Function args
## ====================
# Args are the required parameters for the function. Each arg has two documented
# properties:
# - the arg's name
# - the arg's type (number, integer, symbol, ...).
# Example:
# (Repeat the following for every arg):
# [[chord.args]]
# name = "tonic"
# type = "symbol"

[["load_samples".args]]
name = "paths"
type = "list"

## Function introduction
## ====================
# The label describing the version of Sonic Pi in which this function first appeared.
["load_samples".introduced]
label = "Introduced in v2.0"

## Function options
## ====================
# The options are the optional parameters of this function.
# Each option has two documented properties:
# - the option's name
# - the option's description doc.
# Example:
# [chord.options]
# label = "Options"

# Now repeat the following for every option:
# [[chord.options.list]]
# name = "invert:"
# doc = '''
# Apply the specified num inversions to chord. See the fn `chord_invert`.
# '''

## Function examples
## ====================
# Each function may have one or more examples. If it has any, they are listed
# under an overall 'Example' or 'Examples' label (heading), and each example has
# a numbered sub-heading.
# Example:
# [chord.examples]
# label = "Example"
# label_plural = "Examples"

# Now repeat the following for every example:
# [[chord.examples.list]]
# label = "Example 1"
# example = '''
# puts (chord :e, :minor) # returns a ring of midi notes - (ring 64, 67, 71)
# '''
["load_samples".examples]
label = "Example"
label_plural = "Examples"

[["load_samples".examples.list]]
label = "Example 1"
example = '''

 load_sample :elec_blip # :elec_blip is now loaded and ready to play as a sample
 sample :elec_blip # No delay takes place when attempting to trigger it
'''

[["load_samples".examples.list]]
label = "Example 2"
example = '''
# Using source and filter pre-args
 dir = "/path/to/sample/dir"
 load_sample dir # loads all samples in "/path/to/sample/dir"
 load_sample dir, 1 # loads sample with index 1 in "/path/to/sample/dir"
 load_sample dir, :foo # loads sample with name "foo" in "/path/to/sample/dir"
 load_sample dir, "quux" # loads all samples with file names containing "quux" in "/path/to/sample/dir"
 load_sample dir, /[Bb]ar/ # loads all samples which match regex /[Bb]ar/ in "/path/to/sample/dir"

 
'''

