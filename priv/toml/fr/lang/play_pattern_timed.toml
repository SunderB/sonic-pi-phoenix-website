# This is a data file that contains information describing the text that is
# displayed on pages in the Lang section of Sonic Pi's help panel.

## Function name
## ====================
# A unique identifier for this function.
["play_pattern_timed"]

## Function summary
## ====================
# A short phrase describing this Sonic Pi function.
summary = "Play pattern of notes with specific times"

## Function description
## ====================
# The detailed description of this function.
doc = '''
Play each note in a list of notes one after another with specified times between them. The notes should be a list of MIDI numbers, symbols such as :E4 or chords such as chord(:A3, :major) - identical to the first parameter of the play function. The times should be a list of times between the notes in beats.

If the list of times is smaller than the number of gaps between notes, the list is repeated again. If the list of times is longer than the number of gaps between notes, then some of the times are ignored. See examples for more detail.

Accepts optional args for modification of the synth being played. See each synth's documentation for synth-specific opts. See `use_synth` and `with_synth` for changing the current synth.
'''

## Function args
## ====================
# Args are the required parameters for the function. Each arg has two documented
# properties:
# - the arg's name
# - the arg's type (number, integer, symbol, ...).
# Example:
# (Repeat the following for every arg):
# [[chord.args]]
# name = "tonic"
# type = "symbol"

[["play_pattern_timed".args]]
name = "notes"
type = "list"

[["play_pattern_timed".args]]
name = "times"
type = "list_or_number"

## Function introduction
## ====================
# The label describing the version of Sonic Pi in which this function first appeared.
["play_pattern_timed".introduced]
label = "Introduced in v2.0"

## Function options
## ====================
# The options are the optional parameters of this function.
# Each option has two documented properties:
# - the option's name
# - the option's description doc.
# Example:
# [chord.options]
# label = "Options"

# Now repeat the following for every option:
# [[chord.options.list]]
# name = "invert:"
# doc = '''
# Apply the specified num inversions to chord. See the fn `chord_invert`.
# '''

["play_pattern_timed".options]
label = "Options"

[["play_pattern_timed".options.list]]
name = "amp:"
doc = '''
The amplitude of the note
'''

[["play_pattern_timed".options.list]]
name = "amp_slide:"
doc = '''
The duration in beats for amplitude changes to take place
'''

[["play_pattern_timed".options.list]]
name = "pan:"
doc = '''
The stereo position of the sound. -1 is left, 0 is in the middle and 1 is on the right. You may use a value in between -1 and 1 such as 0.25
'''

[["play_pattern_timed".options.list]]
name = "pan_slide:"
doc = '''
The duration in beats for the pan value to change
'''

[["play_pattern_timed".options.list]]
name = "attack:"
doc = '''
Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently.
'''

[["play_pattern_timed".options.list]]
name = "decay:"
doc = '''
Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
'''

[["play_pattern_timed".options.list]]
name = "sustain:"
doc = '''
Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
'''

[["play_pattern_timed".options.list]]
name = "release:"
doc = '''
Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently.
'''

[["play_pattern_timed".options.list]]
name = "attack_level:"
doc = '''
Amplitude level reached after attack phase and immediately before decay phase
'''

[["play_pattern_timed".options.list]]
name = "decay_level:"
doc = '''
Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
'''

[["play_pattern_timed".options.list]]
name = "sustain_level:"
doc = '''
Amplitude level reached after decay phase and immediately before release phase.
'''

[["play_pattern_timed".options.list]]
name = "env_curve:"
doc = '''
Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
'''

[["play_pattern_timed".options.list]]
name = "slide:"
doc = '''
Default slide time in beats for all slide opts. Individually specified slide opts will override this value
'''

[["play_pattern_timed".options.list]]
name = "pitch:"
doc = '''
Pitch adjustment in semitones. 1 is up a semitone, 12 is up an octave, -12 is down an octave etc.  Decimal numbers can be used for fine tuning.
'''

[["play_pattern_timed".options.list]]
name = "on:"
doc = '''
If specified and false/nil/0 will stop the synth from being played. Ensures all opts are evaluated.
'''

## Function examples
## ====================
# Each function may have one or more examples. If it has any, they are listed
# under an overall 'Example' or 'Examples' label (heading), and each example has
# a numbered sub-heading.
# Example:
# [chord.examples]
# label = "Example"
# label_plural = "Examples"

# Now repeat the following for every example:
# [[chord.examples.list]]
# label = "Example 1"
# example = '''
# puts (chord :e, :minor) # returns a ring of midi notes - (ring 64, 67, 71)
# '''
["play_pattern_timed".examples]
label = "Example"
label_plural = "Examples"

[["play_pattern_timed".examples.list]]
label = "Example 1"
example = '''

play_pattern_timed [40, 42, 44, 46], [1, 2, 3]

# same as:

play 40
sleep 1
play 42
sleep 2
play 44
sleep 3
play 46
'''

[["play_pattern_timed".examples.list]]
label = "Example 2"
example = '''
play_pattern_timed [40, 42, 44, 46, 49], [1, 0.5]

# same as:

play 40
sleep 1
play 42
sleep 0.5
play 44
sleep 1
play 46
sleep 0.5
play 49
'''

[["play_pattern_timed".examples.list]]
label = "Example 3"
example = '''
play_pattern_timed [40, 42, 44, 46], [0.5]

# same as:

play 40
sleep 0.5
play 42
sleep 0.5
play 44
sleep 0.5
play 46
'''

[["play_pattern_timed".examples.list]]
label = "Example 4"
example = '''
play_pattern_timed [40, 42, 44], [1, 2, 3, 4, 5]

#same as:

play 40
sleep 1
play 42
sleep 2
play 44
'''

