# This is a data file that contains information describing the text that is
# displayed on pages in the Lang section of Sonic Pi's help panel.

## Function name
## ====================
# A unique identifier for this function.
["note_range"]

## Function summary
## ====================
# A short phrase describing this Sonic Pi function.
summary = "Get a range of notes"

## Function description
## ====================
# The detailed description of this function.
doc = '''
Produces a ring of all the notes between a start note and an end note. By default this is chromatic (all the notes) but can be filtered with a pitches: argument. This opens the door to arpeggiator style sequences and other useful patterns. If you try to specify only pitches which aren't in the range it will raise an error - you have been warned!
'''

## Function args
## ====================
# Args are the required parameters for the function. Each arg has two documented
# properties:
# - the arg's name
# - the arg's type (number, integer, symbol, ...).
# Example:
# (Repeat the following for every arg):
# [[chord.args]]
# name = "tonic"
# type = "symbol"

[["note_range".args]]
name = "start_note"
type = "note"

[["note_range".args]]
name = "end_note"
type = "note"

## Function introduction
## ====================
# The label describing the version of Sonic Pi in which this function first appeared.
["note_range".introduced]
label = "Introduced in v2.6"

## Function options
## ====================
# The options are the optional parameters of this function.
# Each option has two documented properties:
# - the option's name
# - the option's description doc.
# Example:
# [chord.options]
# label = "Options"

# Now repeat the following for every option:
# [[chord.options.list]]
# name = "invert:"
# doc = '''
# Apply the specified num inversions to chord. See the fn `chord_invert`.
# '''

["note_range".options]
label = "Options"

[["note_range".options.list]]
name = "pitches:"
doc = '''
An array of notes (symbols or ints) to filter on. Octave information is ignored.
'''

## Function examples
## ====================
# Each function may have one or more examples. If it has any, they are listed
# under an overall 'Example' or 'Examples' label (heading), and each example has
# a numbered sub-heading.
# Example:
# [chord.examples]
# label = "Example"
# label_plural = "Examples"

# Now repeat the following for every example:
# [[chord.examples.list]]
# label = "Example 1"
# example = '''
# puts (chord :e, :minor) # returns a ring of midi notes - (ring 64, 67, 71)
# '''
["note_range".examples]
label = "Example"
label_plural = "Examples"

[["note_range".examples.list]]
label = "Example 1"
example = '''
(note_range :c4, :c5) # => (ring 60,61,62,63,64,65,66,67,68,69,70,71,72)
'''

[["note_range".examples.list]]
label = "Example 2"
example = '''
(note_range :c5, :c4) # => (ring 72,71,70,69,68,67,66,65,64,63,62,61,60)
'''

[["note_range".examples.list]]
label = "Example 3"
example = '''
(note_range :c4, :c5, pitches: (chord :c, :major)) # => (ring 60,64,67,72)
'''

[["note_range".examples.list]]
label = "Example 4"
example = '''
(note_range :c4, :c6, pitches: (chord :c, :major)) # => (ring 60,64,67,72,76,79,84)
'''

[["note_range".examples.list]]
label = "Example 5"
example = '''
(note_range :c4, :c5, pitches: (scale :c, :major)) # => (ring 60,62,64,65,67,69,71,72)
'''

[["note_range".examples.list]]
label = "Example 6"
example = '''
(note_range :c4, :c5, pitches: [:c4, :g2]) # => (ring 60,67,72)
'''

[["note_range".examples.list]]
label = "Example 7"
example = '''
live_loop :arpeggiator do
  # try changing the chord
  play (note_range :c4, :c5, pitches: (chord :c, :major)).tick
  sleep 0.125
end
'''

